---
interface Props {
  textBoton: string;}
const { textBoton } = Astro.props;
---
<a   href="https://api.whatsapp.com/send?phone=+573014588503&text=Hola%20Casa%20veterinaria%20Laureles,%20requiero%20una%20consulta%20o%20cita%20para%20" aria-label="contactar por whatsapp a casa veterinaria laureles" target="_blank" class="boton1 scale-[0.75] flex flex-row justify-center shadow-[rgba(50,50,93,0.25)_0px_6px_12px_-2px,_rgba(0,0,0,0.3)_0px_3px_7px_-3px] items-center text-xl md:text-2xl text-center px-5 py-2.5 gap-x-4 sm:scale-85   lg:scale-100  text-stone-900 bg-gradient-to-r from-cyan-500 to-blue-500 hover:bg-gradient-to-bl focus:ring-2 focus:outline-none focus:ring-cyan-300 dark:focus:ring-cyan-800 rounded-3xl ">
    <svg width="45" height="45" viewBox="0 0 61 60" fill="none">
      <g clip-path="url(#clip0_465_292)">
      <path d="M32.375 0C16.8125 0 4.25 12.5625 4.25 28.125C4.25 34.5 6.3125 40.5 10.25 45.375L6.3125 57.375C6.125 58.125 6.3125 58.875 6.875 59.4375C7.0625 59.8125 7.625 60 8 60C8.1875 60 8.5625 60 8.75 59.8125L21.6875 54C25.0625 55.5 28.625 56.25 32.375 56.25C47.9375 56.25 60.5 43.6875 60.5 28.125C60.5 12.5625 47.9375 0 32.375 0Z" fill="#25D366"/>
      <path d="M48.6875 38.4375C47.9375 40.6875 45.125 42.5625 42.6875 42.9375C42.125 43.125 41.5625 43.125 40.8125 43.125C39.3125 43.125 37.0625 42.75 33.125 41.0625C28.625 39.1875 24.125 35.25 20.5625 30.1875V30C19.4375 28.3125 17.375 25.125 17.375 21.75C17.375 17.625 19.4375 15.5625 20.1875 14.625C21.125 13.6875 22.4375 13.125 23.9375 13.125C24.3125 13.125 24.5 13.125 24.875 13.125C26.1875 13.125 27.125 13.5 28.0625 15.375L28.8125 16.875C29.375 18.375 30.125 20.0625 30.3125 20.25C30.875 21.375 30.875 22.3125 30.3125 23.25C30.125 23.8125 29.75 24.1875 29.375 24.5625C29.1875 24.9375 29 25.125 28.8125 25.125C28.625 25.3125 28.625 25.3125 28.4375 25.5C29 26.4375 30.125 28.125 31.625 29.4375C33.875 31.5 35.5625 32.0625 36.5 32.4375C36.875 32.0625 37.25 31.3125 37.8125 30.75L38 30.375C38.9375 29.0625 40.4375 28.6875 41.9375 29.25C42.6875 29.625 46.8125 31.5 46.8125 31.5L47.1875 31.6875C47.75 32.0625 48.5 32.25 48.875 33C49.625 34.6875 49.0625 37.125 48.6875 38.4375Z" fill="white"/>
      </g>
      <defs>
      <clipPath id="clip0_465_292">
      <rect width="60" height="60" fill="white" transform=""/>
      </clipPath>
      </defs>
      </svg><span class="font-bold">{textBoton}</span>
    </a>
   
    <script>
    function handleIntersection(entries, observer) {
      entries.forEach(entry => {
        // Verificar si el elemento es visible
        if (entry.isIntersecting) {
          // Limpiar el estado del elemento y reiniciar la animación
          resetElement(entry.target);
        }
      });
    }
    
    // Función para limpiar el estado del elemento y reiniciar la animación
    function resetElement(element) {
      // Eliminar clases de animación
      element.classList.remove('animate-jump', 'animate-once', 'animate-ease-in');
      // Forzar un reflow para que se apliquen los cambios
      void element.offsetWidth;
      // Agregar clases de animación nuevamente
      element.classList.add('animate-jump', 'animate-once', 'animate-ease-in');
    }
    
    // Opciones para el observador
    const options = {
      root: null, // Utiliza el viewport como área de observación
      threshold: 0.99 // Se activa cuando el 50% del elemento está visible
    };
    
    // Crear un observador
    const observer = new IntersectionObserver(handleIntersection, options);
    
    // Seleccionar todos los elementos con la clase "boton-whatsapp"
    const targets = document.querySelectorAll('.boton1');
    
    // Observar cada elemento
    targets.forEach(target => {
      observer.observe(target);
    });
    </script>