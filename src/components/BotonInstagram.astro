---
interface Props {
  textBoton: string;}
const { textBoton } = Astro.props;
---

<a  href="https://www.instagram.com/casaveterinarialaureles?utm_source=ig_web_button_share_sheet&igsh=ZDNlZDc0MzIxNw==" target="_blank" aria-label="abrir el perfil de instagram casa veterinaria laureles" class="boton2 text-white scale-[0.90] flex flex-row justify-center items-center text-3xl text-center px-5 py-2.5 gap-x-4  shadow-[rgba(50,50,93,0.25)_0px_6px_12px_-2px,_rgba(0,0,0,0.3)_0px_3px_7px_-3px] sm:scale-95   lg:scale-100 bg-gradient-to-br from-purple-700 to-blue-500 hover:bg-gradient-to-bl focus:ring-2 focus:outline-none focus:ring-blue-300  font-medium rounded-3xl my-10 md:my-14 ">
    <svg  width="45" height="45" viewBox="0 0 46 46" fill="none">
        <path d="M35.0781 0.25H11.1719C5.347 0.25 0.625 4.972 0.625 10.7969V34.7031C0.625 40.528 5.347 45.25 11.1719 45.25H35.0781C40.903 45.25 45.625 40.528 45.625 34.7031V10.7969C45.625 4.972 40.903 0.25 35.0781 0.25Z" fill="url(#paint0_radial_553_240)"/>
        <path d="M35.0781 0.25H11.1719C5.347 0.25 0.625 4.972 0.625 10.7969V34.7031C0.625 40.528 5.347 45.25 11.1719 45.25H35.0781C40.903 45.25 45.625 40.528 45.625 34.7031V10.7969C45.625 4.972 40.903 0.25 35.0781 0.25Z" fill="url(#paint1_radial_553_240)"/>
        <path d="M23.1266 5.17188C18.3527 5.17188 17.7535 5.19279 15.8786 5.27805C14.0072 5.36383 12.7298 5.66002 11.6122 6.09473C10.4559 6.54367 9.47523 7.14432 8.49824 8.12166C7.52037 9.09883 6.91973 10.0795 6.46938 11.2353C6.03344 12.3532 5.73689 13.6312 5.6527 15.5017C5.56885 17.3767 5.54688 17.9761 5.54688 22.7502C5.54688 27.5242 5.56797 28.1215 5.65305 29.9964C5.73918 31.8678 6.03537 33.1452 6.46973 34.2628C6.91902 35.4191 7.51967 36.3998 8.49701 37.3768C9.47383 38.3546 10.4545 38.9567 11.6099 39.4056C12.7284 39.8403 14.006 40.1365 15.877 40.2223C17.7521 40.3076 18.3508 40.3285 23.1245 40.3285C27.8989 40.3285 28.4962 40.3076 30.3711 40.2223C32.2424 40.1365 33.5212 39.8403 34.6397 39.4056C35.7955 38.9567 36.7748 38.3546 37.7514 37.3768C38.7293 36.3998 39.3297 35.4191 39.7803 34.2633C40.2123 33.1452 40.5091 31.8674 40.597 29.9968C40.6812 28.1219 40.7031 27.5242 40.7031 22.7502C40.7031 17.9761 40.6812 17.3771 40.597 15.502C40.5091 13.6306 40.2123 12.3534 39.7803 11.2358C39.3297 10.0795 38.7293 9.09883 37.7514 8.12166C36.7737 7.14396 35.7958 6.54332 34.6387 6.0949C33.5181 5.66002 32.24 5.36365 30.3686 5.27805C28.4935 5.19279 27.8966 5.17188 23.1211 5.17188H23.1266ZM21.5496 8.33963C22.0178 8.33893 22.54 8.33963 23.1266 8.33963C27.8201 8.33963 28.3763 8.3565 30.2297 8.4407C31.9436 8.5191 32.8738 8.80545 33.4935 9.04609C34.3138 9.36461 34.8987 9.74553 35.5135 10.3609C36.1288 10.9762 36.5095 11.5621 36.8289 12.3824C37.0696 13.0012 37.3563 13.9314 37.4343 15.6453C37.5185 17.4984 37.5368 18.0549 37.5368 22.7461C37.5368 27.4374 37.5185 27.9941 37.4343 29.847C37.3559 31.5609 37.0696 32.4911 36.8289 33.11C36.5104 33.9304 36.1288 34.5145 35.5135 35.1294C34.8983 35.7446 34.3142 36.1254 33.4935 36.4441C32.8745 36.6858 31.9436 36.9714 30.2297 37.0498C28.3766 37.134 27.8201 37.1523 23.1266 37.1523C18.4329 37.1523 17.8765 37.134 16.0236 37.0498C14.3097 36.9707 13.3795 36.6844 12.7594 36.4437C11.9392 36.125 11.3531 35.7443 10.7379 35.129C10.1226 34.5138 9.74189 33.9293 9.4225 33.1086C9.18186 32.4897 8.89516 31.5595 8.81711 29.8456C8.73291 27.9925 8.71604 27.436 8.71604 22.7417C8.71604 18.0477 8.73291 17.494 8.81711 15.6409C8.89551 13.927 9.18186 12.9968 9.4225 12.3771C9.74119 11.5568 10.1226 10.9709 10.738 10.3557C11.3533 9.74043 11.9392 9.35951 12.7595 9.04029C13.3792 8.79859 14.3097 8.51295 16.0236 8.4342C17.6452 8.3609 18.2736 8.33893 21.5496 8.33523V8.33963ZM32.5098 11.2583C31.3452 11.2583 30.4004 12.2022 30.4004 13.367C30.4004 14.5315 31.3452 15.4763 32.5098 15.4763C33.6743 15.4763 34.6192 14.5315 34.6192 13.367C34.6192 12.2024 33.6743 11.2576 32.5098 11.2576V11.2583ZM23.1266 13.7229C18.1414 13.7229 14.0995 17.7648 14.0995 22.7502C14.0995 27.7355 18.1414 31.7755 23.1266 31.7755C28.1119 31.7755 32.1524 27.7355 32.1524 22.7502C32.1524 17.765 28.1116 13.7229 23.1262 13.7229H23.1266ZM23.1266 16.8907C26.3625 16.8907 28.9861 19.5139 28.9861 22.7502C28.9861 25.9861 26.3625 28.6097 23.1266 28.6097C19.8904 28.6097 17.2673 25.9861 17.2673 22.7502C17.2673 19.5139 19.8904 16.8907 23.1266 16.8907Z" fill="white"/>
        <defs>
        <radialGradient id="paint0_radial_553_240" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.5781 48.7159) rotate(-90) scale(44.5983 41.48)">
        <stop stop-color="#FFDD55"/>
        <stop offset="0.1" stop-color="#FFDD55"/>
        <stop offset="0.5" stop-color="#FF543E"/>
        <stop offset="1" stop-color="#C837AB"/>
        </radialGradient>
        <radialGradient id="paint1_radial_553_240" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(-6.91268 3.49158) rotate(78.681) scale(19.9357 82.1756)">
        <stop stop-color="#3771C8"/>
        <stop offset="0.128" stop-color="#3771C8"/>
        <stop offset="1" stop-color="#6600FF" stop-opacity="0"/>
        </radialGradient>
        </defs>
        </svg>
            {textBoton}
        </span>
    </a>
    
    <script>
      function handleIntersection(entries, observer) {
        entries.forEach(entry => {
          // Verificar si el elemento es visible
          if (entry.isIntersecting) {
            // Limpiar el estado del elemento y reiniciar la animación
            resetElement(entry.target);
          }
        });
      }
      
      // Función para limpiar el estado del elemento y reiniciar la animación
      function resetElement(element) {
        // Eliminar clases de animación
        element.classList.remove('animate-shake', 'animate-twice', 'animate-fill-backwards');
        // Forzar un reflow para que se apliquen los cambios
        void element.offsetWidth;
        // Agregar clases de animación nuevamente
        element.classList.add('animate-shake', 'animate-twice', 'animate-fill-backwards');
      }
      
      // Opciones para el observador
      const options = {
        root: null, // Utiliza el viewport como área de observación
        threshold: 0.5 // Se activa cuando el 50% del elemento está visible
      };
      
      // Crear un observador
      const observer = new IntersectionObserver(handleIntersection, options);
      
      // Seleccionar todos los elementos con la clase "boton-whatsapp"
      const targets = document.querySelectorAll('.boton2');
      
      // Observar cada elemento
      targets.forEach(target => {
        observer.observe(target);
      });
      </script>
